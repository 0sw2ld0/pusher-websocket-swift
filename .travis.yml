language: objective-c
cache: cocoapods
osx_image: xcode7.3
sudo: false
xcode_workspace: PusherSwift.xcworkspace
xcode_scheme: PusherSwift
env:
  global:
    - IOS_SDK=iphonesimulator9.3
    - IOS_SCHEME="PusherSwiftTests-iOS"
    - MACOS_SDK=macosx10.11
    - MACOS_SCHEME="PusherSwiftTests-OSX"
    - TVOS_SDK=appletvsimulator9.2
    - TVOS_SCHEME="PusherSwiftTests-tvOS"
  matrix:
    - DESTINATION="OS=9.2,name=iPad 2"         SDK="$IOS_SDK"   SCHEME="$IOS_SCHEME"
    - DESTINATION="OS=9.2,name=iPad Air"       SDK="$IOS_SDK"   SCHEME="$IOS_SCHEME"
    - DESTINATION="OS=9.2,name=iPhone 5"       SDK="$IOS_SDK"   SCHEME="$IOS_SCHEME"
    - DESTINATION="OS=9.2,name=iPhone 6s"      SDK="$IOS_SDK"   SCHEME="$IOS_SCHEME"
    - DESTINATION="OS=9.3,name=iPhone 6s"      SDK="$IOS_SDK"   SCHEME="$IOS_SCHEME"
    - DESTINATION="OS=8.4,name=iPhone 6"       SDK="$IOS_SDK"   SCHEME="$IOS_SCHEME"
    - DESTINATION="OS=8.4,name=iPad Air"       SDK="$IOS_SDK"   SCHEME="$IOS_SCHEME"
    - DESTINATION="OS=9.1,name=Apple TV 1080p" SDK="$TVOS_SDK"  SCHEME="$TVOS_SCHEME"
    - DESTINATION="OS=9.2,name=Apple TV 1080p" SDK="$TVOS_SDK"  SCHEME="$TVOS_SCHEME"
    - DESTINATION="platform=OS X,arch=x86_64"  SDK="$MACOS_SDK" SCHEME="$MACOS_SCHEME"
before_install:
  - brew update
  - if brew list | grep -q carthage; then
      echo Carthage installed. Proceed without installing;
      carthage version;
    else
      echo Carthage not installed. Installing using homebrew;
      brew install carthage;
    fi
  - gem install cocoapods -v 1.0.0.beta.6
install:
  - pod _1.0.0.beta.6_ update
  - pod _1.0.0.beta.6_ install
before_script:
  - carthage bootstrap
script:
  - set -o pipefail
  - xcodebuild -version
  - if [ "$SCHEME" == "PusherSwiftTests-OSX" ]; then
      xcodebuild -workspace PusherSwift.xcworkspace -scheme "$SCHEME" -destination "$DESTINATION" -sdk "$SDK" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO test -enableCodeCoverage YES | xcpretty -tc;
    else
      xcodebuild -workspace PusherSwift.xcworkspace -scheme "$SCHEME" -destination "$DESTINATION" -sdk "$SDK" test -enableCodeCoverage YES | xcpretty -tc;
    fi